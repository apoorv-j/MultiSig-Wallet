{"version":3,"sources":["utils.js","header.js","newTransfer.js","TransferList.js","App.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","wrap","_context","prev","next","ethereum","Web3","enable","t0","stop","getWallet","_ref2","_callee2","networkId","deployedContract","_context2","eth","net","getId","sent","Wallet","networks","abrupt","Contract","abi","address","_x","apply","this","arguments","header","_ref","approvers","quorum","react_default","createElement","map","approver","NewTransfer","createTransfer","_useState","useState","undefined","_useState2","slicedToArray","transfer","setTransfer","updateTransfer","e","field","objectSpread","defineProperty","target","value","onSubmit","preventDefault","submit","htmlFor","id","type","onChange","TransferList","transfers","approveTransfer","key","amount","to","approvals","onClick","App","setWeb3","_useState3","_useState4","accounts","setAccounts","_useState5","_useState6","wallet","setWallet","_useState7","_useState8","setApprovers","_useState9","_useState10","setQuorum","_useState11","_useState12","setTransers","useEffect","getAccounts","methods","getApprovers","call","getTransfers","init","className","src_header","newTransfer","send","from","src_TransferList","transferID","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.135d127c.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport Wallet from './contracts/Wallet.json';\n\nconst getWeb3 = () => {\n    return new Promise((resolve, reject) =>{\n        window.addEventListener('load', async ()=>{\n            if(window.ethereum){\n                const web3 = new Web3(window.ethereum);\n                try {\n                    await window.ethereum.enable();\n                    resolve(web3);\n                } catch (error) {\n                    reject(error);\n                }\n            }\n            else if(window.web3)\n            {\n                resolve(window.web3);\n            }\n            else{\n                reject('Must install Metamask');\n            }\n        })\n    });\n};\n\nconst getWallet = async web3 => {\n    const networkId = await web3.eth.net.getId();\n    const deployedContract = Wallet.networks[networkId];\n\n    return new web3.eth.Contract(\n        Wallet.abi,\n        deployedContract && deployedContract.address\n    );\n};\n\nexport { getWeb3, getWallet};","import React from 'react'\n\nfunction header({approvers, quorum}) {\n    return(\n    <div>\n        <ul>\n            <li>\n            <ul>\n            Approvers : {approvers.map( approver => (\n                <li>{approver}</li>))}\n            </ul>\n            </li>\n            <li>\n                Quorum : {quorum}\n            </li>\n        </ul>\n    </div>\n    );\n}\n\nexport default header;","import React, { useState } from 'react'\n\nfunction NewTransfer({createTransfer}) {\n\n    const [transfer, setTransfer] = useState(undefined);\n\n    const updateTransfer = (e, field)=>{\n        setTransfer({...transfer, [field]: e.target.value});\n    };\n\n    const submit = e =>{\n        e.preventDefault();\n        createTransfer(transfer);\n    };\n\n    return(\n        <div>\n            <h2>Create Transfer</h2>\n            <form onSubmit = {e => submit(e)} >\n                <label htmlFor=\"amount\">Amount</label>\n                <input \n                id = \"amount\"\n                type=\"text\" \n                onChange = {e => updateTransfer(e,'amount')}\n                />\n                <label htmlFor=\"to\">To</label>\n                <input \n                id = \"to\"\n                type=\"text\" \n                onChange = {e => updateTransfer(e,'to')}\n                />\n            <button>Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewTransfer;","import React from 'react'\n\nfunction TransferList({transfers, approveTransfer}) {\n    return(\n        <div>\n            <h2>Transfers</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Amount</th>\n                        <th>To</th>\n                        <th>Approvals</th>\n                        <th>Sent</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {transfers.map(transfer => (\n                        <tr key={transfer.id}>\n                            <td>{transfer.id}</td>\n                            <td>{transfer.amount}</td>\n                            <td>{transfer.to}</td>\n                            <td>\n                                {transfer.approvals}\n                                <button onClick = {() => approveTransfer(transfer.id)}>\n                                    Approve</button>\n                            </td>\n                            <td>{transfer.sent ? 'yes':'no'}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default TransferList;","import React, {useEffect, useState} from 'react';\nimport {getWeb3, getWallet} from './utils.js'\nimport Header from './header.js'\nimport NewTransfer from './newTransfer.js'\nimport TransferList from './TransferList.js'\n\nfunction App() {\n\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [wallet, setWallet] = useState(undefined);\n  const [approvers, setApprovers] = useState([]);\n  const [quorum, setQuorum] = useState(undefined);\n  const [transfers, setTransers] = useState([]);\n\n  useEffect(() => {\n    const init = async () =>{\n\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const wallet = await getWallet(web3);\n      const approvers = await wallet.methods.getApprovers().call();\n      const quorum = await wallet.methods.quorum().call();\n      const transfers = await wallet.methods.getTransfers().call();\n      setTransers(transfers);\n      setWeb3(web3);\n      setWallet(wallet);\n      setAccounts(accounts);\n      setApprovers(approvers);\n      setQuorum(quorum);         \n    };\n    init();\n\n  }, []);\n  \n  // console.log('Account 0 : ', accounts);\n  if(typeof web3 == undefined \n    || typeof wallet == undefined \n    || typeof accounts == undefined \n    || typeof approvers == undefined \n    || typeof quorum == undefined)\n  {\n    return(\n      <div>Loading...</div>\n    );\n  }\n  const createTransfer = transfer => {\n    wallet.methods\n    .createTransfer(transfer.amount, transfer.to)\n    .send({from: accounts[0]});\n  };\n  const approveTransfer = transferID => {\n    wallet.methods\n    .approveTransfer(transferID)\n    .send({from: accounts[0]});\n  };\n\n  return (\n    <div className=\"App\">\n      Multi Sig Wallet\n      <Header approvers = {approvers} quorum = {quorum} />\n      <NewTransfer createTransfer = {createTransfer} />\n      <TransferList transfers = {transfers} approveTransfer = {approveTransfer}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}