{"ast":null,"code":"import _regeneratorRuntime from \"/home/vibe/code/sol/wallet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/vibe/code/sol/wallet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nimport Wallet from './contracts/Wallet.json';\nvar URL = 'http://127.0.0.1:9545/';\n\nvar getWeb3 = function getWeb3() {\n  return new Promise(function (resolve, reject) {\n    window.addEventListener('load', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var web3;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.next = 3;\n              return new Web3(window.ethereum);\n\n            case 3:\n              web3 = _context.sent;\n              _context.prev = 4;\n              _context.next = 7;\n              return window.ethereum.enable();\n\n            case 7:\n              resolve(web3);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](4);\n              reject(_context.t0);\n\n            case 13:\n              _context.next = 16;\n              break;\n\n            case 15:\n              if (window.web3) {\n                resolve(window.web3);\n              } else {\n                reject('Must install Metamask');\n              }\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 10]]);\n    })));\n  });\n};\n\nvar getWallet = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(web3) {\n    var networkId, deployedContract;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return web3.eth.net.getId();\n\n          case 2:\n            networkId = _context2.sent;\n            deployedContract = Wallet.networks[networkId];\n            return _context2.abrupt(\"return\", new web3.eth.Contract(Wallet.abi, deployedContract && deployedContract.address));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getWallet(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport { getWeb3, getWallet };","map":{"version":3,"sources":["/home/vibe/code/sol/wallet/client/src/utils.js"],"names":["Web3","Wallet","URL","getWeb3","Promise","resolve","reject","window","addEventListener","ethereum","web3","enable","getWallet","eth","net","getId","networkId","deployedContract","networks","Contract","abi","address"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,IAAMC,GAAG,GAAG,wBAAZ;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACnCC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,wEAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzBD,MAAM,CAACE,QADkB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEL,IAAIT,IAAJ,CAASO,MAAM,CAACE,QAAhB,CAFK;;AAAA;AAElBC,cAAAA,IAFkB;AAAA;AAAA;AAAA,qBAIdH,MAAM,CAACE,QAAP,CAAgBE,MAAhB,EAJc;;AAAA;AAKpBN,cAAAA,OAAO,CAACK,IAAD,CAAP;AALoB;AAAA;;AAAA;AAAA;AAAA;AAOpBJ,cAAAA,MAAM,aAAN;;AAPoB;AAAA;AAAA;;AAAA;AAUvB,kBAAGC,MAAM,CAACG,IAAV,EACL;AACIL,gBAAAA,OAAO,CAACE,MAAM,CAACG,IAAR,CAAP;AACH,eAHI,MAID;AACAJ,gBAAAA,MAAM,CAAC,uBAAD,CAAN;AACH;;AAhB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhC;AAkBH,GAnBM,CAAP;AAoBH,CArBD;;AAuBA,IAAMM,SAAS;AAAA,uEAAG,kBAAMF,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUA,IAAI,CAACG,GAAL,CAASC,GAAT,CAAaC,KAAb,EADV;;AAAA;AACRC,YAAAA,SADQ;AAERC,YAAAA,gBAFQ,GAEWhB,MAAM,CAACiB,QAAP,CAAgBF,SAAhB,CAFX;AAAA,8CAIP,IAAIN,IAAI,CAACG,GAAL,CAASM,QAAb,CACHlB,MAAM,CAACmB,GADJ,EAEHH,gBAAgB,IAAIA,gBAAgB,CAACI,OAFlC,CAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATT,SAAS;AAAA;AAAA;AAAA,GAAf;;AAUA,SAAST,OAAT,EAAkBS,SAAlB","sourcesContent":["import Web3 from 'web3';\nimport Wallet from './contracts/Wallet.json';\n\nconst URL = 'http://127.0.0.1:9545/';\n\nconst getWeb3 = () => {\n    return new Promise((resolve, reject) =>{\n        window.addEventListener('load', async ()=>{\n            if(window.ethereum){\n                const web3 = await new Web3(window.ethereum);\n                try {\n                    await window.ethereum.enable();\n                    resolve(web3);\n                } catch (error) {\n                    reject(error);\n                }\n            }\n            else if(window.web3)\n            {\n                resolve(window.web3);\n            }\n            else{\n                reject('Must install Metamask');\n            }\n        })\n    });\n};\n\nconst getWallet = async web3 => {\n    const networkId = await web3.eth.net.getId();\n    const deployedContract = Wallet.networks[networkId];\n\n    return new web3.eth.Contract(\n        Wallet.abi,\n        deployedContract && deployedContract.address\n    );\n};\n\nexport { getWeb3, getWallet};"]},"metadata":{},"sourceType":"module"}